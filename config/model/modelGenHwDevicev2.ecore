<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="datamodel"
    nsURI="http://alma.Control.datamodel.meta/1.0" nsPrefix="alma.Control.datamodel">
  <eSubpackages name="amb" nsURI="http://alma.Control.datamodel.meta.amb/1.0" nsPrefix="alma.Control.datamodel.meta.amb">
    <eClassifiers xsi:type="ecore:EClass" name="ArchiveAMB" eSuperTypes="#//base/ArchiveProperty">
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isIntervalTE" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getAssemblyColumn" eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ControlAMB" eSuperTypes="#//base/ControlPoint">
      <eOperations name="Data" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Returns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Parameter" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="MinRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="MaxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="idlReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="corbaReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="idlDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="idlSignature" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="idlParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="corbaDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="corbaParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="cppReturns" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="cppDeclaration" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="cppParameters" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="argList" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="argWords" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TeRelatedCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="GetDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="getBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="WorlDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="worldToDataColumns" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoControlSheet"
          eType="#//amb/MandCAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toNormalizeNumber" eType="#//base/Util"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" eSuperTypes="#//base/DeviceModel">
      <eOperations name="isMonitorDBOnly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="IsGeneratedAlt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="Parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Cardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NodeAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Channel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="BaseAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="GenericMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="CreateModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TheEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NodeAddressInDecimal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="HexToDec" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toAddCP" eType="#//base/ControlPoint"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getNoteFromMain" eType="#//base/Note"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toAddMP" eType="#//base/MonitorPoint"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoMain" eType="#//base/MainBase"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getCPfromControl" eType="#//amb/ControlAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoFromMainSheet"
          eType="#//amb/MainAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getMPfromMonitor" eType="#//amb/MonitorAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getDataFromSpread" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getAPfromArchive" eType="#//amb/ArchiveAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ToinstallEndGeneration"
          eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getFromSpreadsheet" eType="#//base/SpreadsheetParser"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toValidateSpreadsheet"
          eType="#//base/SpreadsheetValidator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getGenericMP" eType="#//amb/GenericMonitorPoints"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MainAMB" eSuperTypes="#//base/MainBase">
      <eOperations name="Parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NodeAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Cardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Channel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="GenericMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="BaseAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoFromMain" eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MandCAMB">
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataTypeCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataTypeCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="ScaleCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="OffsetCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="GetDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="getBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="findRawSubArrayIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="startOrEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      </eOperations>
      <eOperations name="WorldDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mcp" eType="#//base/MandCBaseDT"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mask" eType="#//base/String1DT"
          defaultValueLiteral="&quot;0x01&quot;, &quot;0x02&quot;, &quot;0x04&quot;, &quot;0x08&quot;, &quot;0x10&quot;,&quot;0x20&quot;, &quot;0x40&quot;, &quot;0x80&quot;"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoSheet" eType="#//base/MandCBase"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getDataFromMain" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="isMPDataType" eType="#//amb/MonitorAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="isCPDataType" eType="#//amb/ControlAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="utilsToData" eType="#//base/Util"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MonitorAMB" eSuperTypes="#//base/MonitorPoint">
      <eOperations name="CanBeInvalid" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isFEStatus" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCA" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TeRelated" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="WorldDataType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Scale" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Offset" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCPPType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBAType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLSeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToIDLType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBASeqType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToCORBADevIOType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToJavaType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToDatabaseType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataToBACIType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isRawDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isWorldDataArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isSpecialConversion" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="NumberItemsRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TotalBytesRawData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RCACell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="NumberItemsWorldData" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="TeRelatedCell" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isDependentGroupBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isByteSwapped" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentBitElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isDependentArrayElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="getDimension" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isSingleBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="getBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getFirstBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getLastBit" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupMask" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="getGroupStart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawSubArrayEndIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="RawSubArrayStartIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isRawSubArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="WorldDataToDatabaseTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="WorldDataTypeUpper1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="minRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="maxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Default" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="isPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isPartOfPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isPartOfHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toNormalizeData" eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getColumnsCanBeInv" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoMPSheet" eType="#//amb/MandCAMB"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SWModule">
      <eOperations name="addMP">
        <eParameters name="mp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"/>
      </eOperations>
      <eOperations name="addCP">
        <eParameters name="cp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"/>
      </eOperations>
      <eOperations name="addAP">
        <eParameters name="ap" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"/>
      </eOperations>
      <eOperations name="Initialize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="DirPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="MonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"/>
      <eOperations name="ControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"/>
      <eOperations name="ArchiveProperty" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"/>
      <eOperations name="SimMonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"/>
      <eOperations name="SimControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"/>
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="DescriptionL1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="DescriptionAsString"/>
      <eOperations name="DeviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Extends" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Cardinality" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="GenericMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="NodeAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="HexToDec" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="NodeAddressInDecimal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="Channel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="BaseAddress" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="SimSerialNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="AssemblyName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="dirPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mainAssembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="oneSwModule" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentRow" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="monitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="archiveProperties" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="simMonitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="simControlPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="addAllMP" eType="#//amb/MonitorAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="addAllCP" eType="#//amb/ControlAMB"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="setFormatDescriptions"
          eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getSheetColumns" eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="GenericMonitorPoints">
      <eOperations name="getParsedGenericSpreadsheet" eType="#//base/String3DT"/>
      <eOperations name="getDeviceWorksheetWithGenericPointsAdded" eType="#//base/String3DT">
        <eParameters name="spreadsheet" eType="#//base/String3DT"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="newSpreadsheet" eType="#//base/String3DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="dirLocation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getTheSpreadsheet" eType="#//base/SpreadsheetParser"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toValidateTheSpreadsheet"
          eType="#//base/SpreadsheetValidator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="toInstallDir" eType="#//base/Util"/>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="base" nsURI="http://alma.Control.datamodel.base/1.0" nsPrefix="alma.Control.datamodel.meta.base">
    <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" abstract="true">
      <eOperations name="CreateModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eOperations name="CheckConstraints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return &quot;&quot;;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="initializeModelDependencies"/>
      <eOperations name="DirPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return Assembly();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="TheEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String dir = generatedDir + &quot;/&quot; + Assembly();&#xD;&#xA;Util utils = BaseFactoryImpl.eINSTANCE.createUtil();&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/src&quot;, Assembly() + &quot;Base.cpp&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/include&quot;, Assembly() + &quot;Base.h&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;Base.idl&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/idl&quot;, Assembly() + &quot;Add.sql&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/doc&quot;, Assembly() + &quot;.xml&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/doc&quot;, Assembly() + &quot;Component.xml&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/config/CDB/schemas&quot;, Assembly() + &quot;Base.xsd&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/config&quot;, &quot;TMCDB&quot; + Assembly() + &quot;Add.xml&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/src/CCL&quot;, Assembly() + &quot;Base.py&quot;, 1);&#xD;&#xA;utils.RemoveLinesFromFile(dir + &quot;/src/CCL&quot;, &quot;__init__.py&quot;, 1);&#xD;&#xA;System.out.println(&quot;Code generation for &quot; + deviceName + &quot; done.&quot;);&#xD;&#xA;return &quot;&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="checkIfFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="java.io.File f = new java.io.File(fileName);&#xD;&#xA;if(f.exists() == true){&#xD;&#xA;            return true;&#xD;&#xA;  }else{&#xD;&#xA;            return false;&#xD;&#xA;          }"/>
        </eAnnotations>
        <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="checkIfFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(directory.isEmpty() == false){&#xD;&#xA;            return checkIfFileExists(directory + &quot;/&quot; + fileName);&#xD;&#xA;        } else{&#xD;&#xA;            return checkIfFileExists(fileName);&#xD;&#xA;                }"/>
        </eAnnotations>
        <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="checkIfDeviceFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/&quot; + Assembly() + localFileName;&#xD;&#xA;        return checkIfFileExists(fileName);"/>
        </eAnnotations>
        <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="localFileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="checkIfTestFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/Test&quot; + Assembly() + localFileName;&#xD;&#xA;        return checkIfFileExists(fileName);"/>
        </eAnnotations>
        <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="localFileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="checkIfCvsignoreFileExists" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String fileName = getDeviceDir() + &quot;/&quot; + directory + &quot;/.cvsignore&quot;;&#xD;&#xA;        return checkIfFileExists(fileName);"/>
        </eAnnotations>
        <eParameters name="directory" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getArchive" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int archiveIndex = BaseFactoryImpl.eINSTANCE.createTable().getSheetNum(&quot;ArchiveProperty&quot;);&#xD;&#xA;&#x9;for(int i = 2; i &lt; spreadsheet[archiveIndex].length; i++)  {&#xD;&#xA;&#x9;&#x9;if(spreadsheet[archiveIndex][i].length == 0)&#xD;&#xA;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;            &#x9;&#xD;&#xA;&#x9;&#x9; String[] row = spreadsheet[archiveIndex][i];&#xD;&#xA;&#x9;&#x9;  ArchiveProperty ap = BaseFactoryImpl.eINSTANCE.createArchiveProperty();&#xD;&#xA;&#x9;&#x9;  if(name.equals(ap.RefersTo()))&#xD;&#xA;&#x9;&#x9;             return (Resource) ap;&#xD;&#xA;&#x9;&#x9;   }&#xD;&#xA;&#x9;&#x9;        return null;"/>
        </eAnnotations>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getMonitorPoint" eType="#//base/MonitorPoint">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for(int i = 0; i &lt; monitorPoints.getResources().size(); i++){&#xD;&#xA;&#x9;MonitorPoint mp = (MonitorPoint) monitorPoints.getResources().get(i);&#xD;&#xA;      if(mp.FullName().equals(fullName))&#xD;&#xA;&#x9;&#x9;      return mp;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;return null;"/>
        </eAnnotations>
        <eParameters name="fullName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getControlPoint" eType="#//base/ControlPoint">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="for (int i = 0; i &lt; controlPoints.getResources().size(); i++) {&#xD;&#xA;&#x9; ControlPoint cp = (ControlPoint) controlPoints.getResources().get(i);&#xD;&#xA;&#x9; if (cp.FullName().equals(fullName))&#xD;&#xA;&#x9;&#x9;         return cp;&#xD;&#xA;&#x9; }&#xD;&#xA;&#x9;&#x9;  return null;"/>
        </eAnnotations>
        <eParameters name="fullName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.Assembly();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Extends" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.Extends();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DeviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.DeviceName();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.Description();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.DescriptionAsString();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICD" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.ICD();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.ICDDate();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDateAsDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.ICDDateAsDatabaseDate();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDateAsArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return main.ICDDateAsArrayTime();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Notes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return notes;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="MonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return monitorPoints;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return controlPoints;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ArchiveProperty" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return archiveProperties;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="DescriptionIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="1"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheet" eType="#//base/String3DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="main" eType="#//base/MainBaseDT"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="notes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="monitorPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="controlPoints" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="archiveProperties" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="busType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="deviceDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="codegenDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheetDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="generatedDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="monitorDBOnly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="generateAlt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getArchiveIndex" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getContPoints" eType="#//base/ControlPoint"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getMoniPoints" eType="#//base/MonitorPoint"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getEndOfGeneration" eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getArchivProp" eType="#//base/ArchiveProperty"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfFromSpread" eType="#//base/MainBase"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MonitorPoint" abstract="true" eSuperTypes="#//base/MandCBase">
      <eOperations name="Default" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Default&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ErrorCondition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Error Condition&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ErrorSeverity" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Error Severity&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ErrorAction" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Error Action&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="APName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return PName();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="RefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return PName();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int defaultValue = 300;&#xD;&#xA;&#x9;if(archive != null) {&#xD;&#xA;&#x9;&#x9;&#x9;if ( ((ArchiveProperty)archive).Interval().equals(&quot;none&quot;) )&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return Integer.toString(defaultValue);&#xD;&#xA;&#x9;&#x9;&#x9;int value = Integer.valueOf(((ArchiveProperty)archive).Interval());&#xD;&#xA;&#x9;&#x9;&#x9;if (value &lt;= 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;value = defaultValue;&#xD;&#xA;&#x9;&#x9;&#x9;return Integer.toString(value);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;return Integer.toString(defaultValue);"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="OnlyOnChange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).OnlyOnChange();&#xD;&#xA;else&#xD;&#xA;&#x9;return false;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DisplayUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).DisplayUnits();&#xD;&#xA;else&#xD;&#xA;&#x9;return DataUnits();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="GraphMin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).GraphMin();&#xD;&#xA;else&#xD;&#xA;&#x9;return &quot;none&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="GraphMax" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).GraphMax();&#xD;&#xA;else&#xD;&#xA;&#x9;return &quot;none&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).Format();&#xD;&#xA;else&#xD;&#xA;&#x9;return &quot;none&quot;;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(archive != null)&#xD;&#xA;&#x9;return ((ArchiveProperty)archive).Title();&#xD;&#xA;else&#xD;&#xA;&#x9;return Description();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="MPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return PName();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="AltMPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return AltPName();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isPartOfPattern" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eOperations name="isPartOfHomogeneous" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoFromAPSpread"
          eType="#//base/ArchiveProperty"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoFromMPSpread"
          eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ControlPoint" abstract="true" eSuperTypes="#//base/MandCBase">
      <eOperations name="CPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return PName();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="AltCPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return AltPName();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ArchiveOnUse" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Archive On Use&quot;)].equals(&quot;yes&quot;);&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return false;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getArchOnUseControl"
          eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Table">
      <eOperations name="getSheetNum" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int i;&#xD;&#xA;&#x9;for(i = 0; i &lt; sheetNames.size(); i++)&#xD;&#xA;&#x9;&#x9;if(((String)sheetNames.get(i)).compareTo(name) == 0)&#xD;&#xA;&#x9;&#x9;&#x9;return i;&#xD;&#xA;&#x9;return -1;"/>
        </eAnnotations>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getColNum" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int i;&#xD;&#xA;for(i = 0; i &lt; ((ArrayList)colNames.get(sheet)).size(); i++)&#xD;&#xA;&#x9;if(((String)((ArrayList)colNames.get(sheet)).get(i)).compareTo(name) == 0)&#xD;&#xA;&#x9;&#x9;return i;&#xD;&#xA;&#x9;return -1;"/>
        </eAnnotations>
        <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="addSheet">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="sheetNames.add(name);&#xD;&#xA;colNames.add(new ArrayList());"/>
        </eAnnotations>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="addCol">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="((ArrayList)colNames.get(sheet)).add(name);&#xD;&#xA;"/>
        </eAnnotations>
        <eParameters name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="initialize">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;int i, j;&#xD;&#xA;&#x9;&#x9;sheetNames = new ArrayList();&#xD;&#xA;&#x9;&#x9;colNames = new ArrayList();&#xD;&#xA;&#x9;&#x9;for(i = 0; i &lt; sh.length; i++){&#xD;&#xA;&#x9;&#x9;&#x9;addSheet(sh[i][0][0]);&#xD;&#xA;&#x9;&#x9;&#x9;for(j = 0; j &lt; sh[i][1].length; j++){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;addCol(i, sh[i][1][j]);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;toCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;char&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;short&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;long long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;bool&quot;, &quot;bool&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;toCPP.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toIDL = new Hashtable();&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;char&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;long long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toIDL.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toIDLSeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;char&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;long long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;bool&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;toIDLSeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBA = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;char&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;long long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;bool&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;toCORBA.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBADevIO = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;char&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;long long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;bool&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;string&quot;, &quot;CORBA::String&quot;);&#xD;&#xA;&#x9;&#x9;toCORBADevIO.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toCORBASeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;char&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;long long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;bool&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;toCORBASeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toBACI = new Hashtable();&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;char&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;long long&quot;, &quot;longLong&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toBACI.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;toDatabase = new Hashtable();&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;char&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;short&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;int&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;long long&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;bool&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;toDatabase.put(&quot;void&quot;, &quot;-none-&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawToCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;bit&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;ubyte&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int8&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint8&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int16&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint16&quot;, &quot;unsigned short&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int24&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint24&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int32&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint32&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int48&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint48&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;int64&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;uint64&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;rawToCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawToByteSwapped = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;bit&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;ubyte&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int8&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint8&quot;, &quot;false&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int16&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint16&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int24&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint24&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int32&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint32&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int48&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint48&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;int64&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;uint64&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;float&quot;, &quot;true&quot;);&#xD;&#xA;&#x9;&#x9;rawToByteSwapped.put(&quot;double&quot;, &quot;true&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;rawBytes = new Hashtable();&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;bit&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;ubyte&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int8&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint8&quot;, &quot;1&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int16&quot;, &quot;2&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint16&quot;, &quot;2&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int24&quot;, &quot;3&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint24&quot;, &quot;3&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int32&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint32&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int48&quot;, &quot;6&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint48&quot;, &quot;6&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;int64&quot;, &quot;8&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;uint64&quot;, &quot;8&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;float&quot;, &quot;4&quot;);&#xD;&#xA;&#x9;&#x9;rawBytes.put(&quot;double&quot;, &quot;8&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCPP = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;byte&quot;, &quot;char&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ubyte&quot;, &quot;unsigned char&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;short&quot;, &quot;short&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ushort&quot;, &quot;unsigned short&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;uint&quot;, &quot;unsigned int&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;ulong&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;boolean&quot;, &quot;bool&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;string&quot;, &quot;std::string&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCPP.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToJava = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;byte&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ubyte&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;short&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ushort&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;int&quot;, &quot;int&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;uint&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;long&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;ulong&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;string&quot;, &quot;String&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;acstime&quot;, &quot;ACSTime&quot;);&#xD;&#xA;&#x9;&#x9;worldToJava.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToBACI = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;byte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ubyte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ushort&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;uint&quot;, &quot;uLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;long&quot;, &quot;longLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;ulong&quot;, &quot;uLongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;acstime&quot;, &quot;uLongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToBACI.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBA = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;byte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ubyte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ushort&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;uint&quot;, &quot;CORBA::ULong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;ulong&quot;, &quot;CORBA::ULongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;boolean&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;string&quot;, &quot;char *&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBA.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;byte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ubyte&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;short&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ushort&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;int&quot;, &quot;CORBA::Long&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;uint&quot;, &quot;CORBA::ULong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;long&quot;, &quot;CORBA::LongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;ulong&quot;, &quot;CORBA::ULongLong&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;float&quot;, &quot;CORBA::Float&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;double&quot;, &quot;CORBA::Double&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;boolean&quot;, &quot;CORBA::Boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;string&quot;, &quot;CORBA::String&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBADevIO.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToCORBASeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;byte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ubyte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ushort&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;uint&quot;, &quot;Control::ULongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;ulong&quot;, &quot;Control::ULongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;boolean&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;acstime&quot;, &quot;Control::ACSTimeSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToCORBASeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToIDLSeq = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;byte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ubyte&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;short&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ushort&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;int&quot;, &quot;Control::LongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;uint&quot;, &quot;Control::ULongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;long&quot;, &quot;Control::LongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;ulong&quot;, &quot;Control::ULongLongSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;float&quot;, &quot;Control::FloatSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;double&quot;, &quot;Control::DoubleSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;boolean&quot;, &quot;Control::BooleanSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;string&quot;, &quot;Control::StringSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;acstime&quot;, &quot;Control::ACSTimeSeq&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDLSeq.put(&quot;void&quot;, &quot;NOTHING&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToIDL = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;byte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ubyte&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;short&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ushort&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;int&quot;, &quot;long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;uint&quot;, &quot;unsigned long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;long&quot;, &quot;long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;ulong&quot;, &quot;unsigned long long&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;acstime&quot;, &quot;ACS::Time&quot;);&#xD;&#xA;&#x9;&#x9;worldToIDL.put(&quot;void&quot;, &quot;void&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;worldToDatabase = new Hashtable();&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;byte&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ubyte&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;short&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ushort&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;int&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;uint&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;long&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;ulong&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;float&quot;, &quot;float&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;double&quot;, &quot;double&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;boolean&quot;, &quot;boolean&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;string&quot;, &quot;string&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;acstime&quot;, &quot;integer&quot;);&#xD;&#xA;&#x9;&#x9;worldToDatabase.put(&quot;void&quot;, &quot;-none-&quot;);"/>
        </eAnnotations>
        <eParameters name="sh" eType="#//base/String3DT"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="DepChar" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="^"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="CelsiusToKelvin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="CelsiusToKelvin"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheetNames" eType="#//base/ArrayList"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="colNames" eType="#//base/ArrayList"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="tagNames" eType="#//base/ArrayList"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCPP" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toIDL" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toIDLSeq" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBA" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBASeq" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toCORBADevIO" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toBACI" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="toDatabase" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawToCPP" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawToByteSwapped" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="rawBytes" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCPP" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToIDL" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToIDLSeq" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBA" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBASeq" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToCORBADevIO" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToBACI" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToJava" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="worldToDatabase" eType="#//base/Hashtable"
          defaultValueLiteral="null"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MandCBase" abstract="true">
      <eOperations name="addDependent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="dependents.getResources().add(son);&#xD;&#xA;"/>
        </eAnnotations>
        <eParameters name="son" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"/>
      </eOperations>
      <eOperations name="isDependent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (parent == null)&#xD;&#xA;&#x9;return false;&#xD;&#xA;return true;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="hasDependents" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return !dependents.getResources().isEmpty();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="FullName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Name&quot;)];&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(isDependent())&#xD;&#xA;&#x9;return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Name&quot;)].substring(1);&#xD;&#xA;else&#xD;&#xA;&#x9;return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Name&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getDependentName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return Name();&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAltDependentName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().AltName(getDependentName());&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getDependsOnName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if(!isDependent())&#xD;&#xA;&#x9;return &quot;&quot;;&#xD;&#xA;return ((MandCBase)getParent()).Name();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getAltDependsOnName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().AltName(((MandCBase)getParent()).Name());&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DataUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Data Units&quot;)];&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="MinRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Min Range&quot;)];&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="MaxRange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Max Range&quot;)];&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Mode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Mode&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Implement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Implement&quot;)].equals(&quot;yes&quot;);&#xD;&#xA;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="External" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;External&quot;)].equals(&quot;yes&quot;);"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Description&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isExternal" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return External();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isArchived" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return true;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isImplemented" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return Implement();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="dropPrefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (s.startsWith(&quot;GET_&quot;) || s.startsWith(&quot;SET_&quot;))&#xD;&#xA;&#x9;return s.substring(4);&#xD;&#xA;return s;"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="PName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (Name().startsWith(TableImpl.DEP_CHAR_EDEFAULT))&#xD;&#xA;&#x9;return dropPrefix(Name().substring(1));&#xD;&#xA;return dropPrefix(Name());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="AltPName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (Name().startsWith(&quot;SET_&quot;))&#xD;&#xA;&#x9;return &quot;Cntl&quot; + BaseFactoryImpl.eINSTANCE.createUtil().AltName(PName()); &#xD;&#xA;return BaseFactoryImpl.eINSTANCE.createUtil().AltName(PName());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().descriptionAsString(Description());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionFormatted" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().formatDescriptionL2(Description());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionFormattedL4" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().formatDescriptionL4(Description());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionFormattedL5" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().formatDescriptionL5(Description());"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isMonitored" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="spreadsheetName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral="Not needed"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheetName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="parentRow" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="parent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="archive" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="dependents" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResourceSet"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="setInfFromSpread" eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getCommonInf" eType="#//base/Table"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="setMPorCP" eType="#//base/ArchiveProperty"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getSheetMP" eType="#//base/MonitorPoint"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ArchiveProperty">
      <eOperations name="isRefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return mp != null || cp != null;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isMonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return mp != null;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return cp != null;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getMonitorPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return mp;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getControlPoint" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return cp;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="APName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=" String name = Name();&#xD;&#xA;if (name.startsWith(TableImpl.DEP_CHAR_EDEFAULT))&#xD;&#xA;&#x9;name = name.substring(1);&#xD;&#xA;return name;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Name&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="RefersTo" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Refers To&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="IntervalFull" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Interval (secs)&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Interval" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Interval (secs)&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="OnlyOnChange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Only On Change&quot;)].equals(&quot;yes&quot;);"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DisplayUnits" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Display Units&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="GraphMin" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Graph Min&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="GraphMax" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Graph Max&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Format&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="OnStartup" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;On Startup&quot;)].equals(&quot;yes&quot;);"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Title&quot;)];"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="mp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="cp" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EResource"
          transient="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getColumnsInfoOfArchi"
          eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Note">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="note" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral=""/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SpreadsheetValidator">
      <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;javax.xml.parsers.DocumentBuilderFactory factory = javax.xml.parsers.DocumentBuilderFactory.newInstance();&#xD;&#xA;&#x9;&#x9;        factory.setNamespaceAware(true);&#xD;&#xA;&#x9;&#x9;        factory.setValidating(true);&#xD;&#xA;&#x9;&#x9;        factory.setAttribute(&#xD;&#xA;&#x9;&#x9;                &quot;http://java.sun.com/xml/jaxp/properties/schemaLanguage&quot;,&#xD;&#xA;&#x9;&#x9;                &quot;http://www.w3.org/2001/XMLSchema&quot;);&#xD;&#xA;&#x9;&#x9;        // Specify our own schema - this overrides the schemaLocation in the xml&#xD;&#xA;&#x9;&#x9;        // file&#xD;&#xA;&#x9;&#x9;        factory.setAttribute(&#xD;&#xA;&#x9;&#x9;                &quot;http://java.sun.com/xml/jaxp/properties/schemaSource&quot;,&#xD;&#xA;&#x9;&#x9;                &quot;file://&quot; + xsdFile);&#xD;&#xA;&#x9;&#x9;       seh = BaseFactoryImpl.eINSTANCE.createSimpleErrorHandler();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;        try {&#xD;&#xA;&#x9;&#x9;        &#x9;javax.xml.parsers.DocumentBuilder builder = factory.newDocumentBuilder();&#xD;&#xA;&#x9;&#x9;            builder.setErrorHandler(seh);&#xD;&#xA;&#x9;&#x9;            org.w3c.dom.Document document = builder.parse(xmlFile);&#xD;&#xA;&#x9;&#x9;        }&#xD;&#xA;&#x9;&#x9;        catch(Exception e) {&#xD;&#xA;&#x9;&#x9;            System.out.println(&quot;Validating error file &quot; + xmlFile&#xD;&#xA;&#x9;&#x9;                    + &quot; with schema file &quot; + xsdFile + &quot; failed!&quot;);&#xD;&#xA;&#x9;&#x9;            return false;&#xD;&#xA;&#x9;&#x9;        }&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;        if(seh.areErrors()) {&#xD;&#xA;&#x9;&#x9;            System.out.println(&quot;Validating error file &quot; + xmlFile&#xD;&#xA;&#x9;&#x9;                    + &quot; with schema file &quot; + xsdFile + &quot; failed!&quot;);&#xD;&#xA;&#x9;&#x9;            return false;&#xD;&#xA;&#x9;&#x9;        }&#xD;&#xA;&#x9;&#x9;        else {&#xD;&#xA;&#x9;&#x9;            return true;&#xD;&#xA;&#x9;&#x9;        }"/>
        </eAnnotations>
        <eParameters name="xmlFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="xsdFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="seh" eType="#//base/SimpleErrorHandlerDT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="errorList" eType="#//base/ArrayList"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="errorHandler" eType="#//base/SimpleErrorHandler"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SpreadsheetParser">
      <eOperations name="getSpreadsheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;&#x9;&#x9;java.io.File dir = new java.io.File(dirName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!dir.isDirectory())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new DesignError (&quot;Directory &quot; + dirName + &quot; does not exist.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.File file = new java.io.File(dir, fileName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!file.exists())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new DesignError (&quot;File &quot; + fileName + &quot; in directory &quot; + dirName + &quot; does not exist.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.BufferedReader in = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;StringBuffer xmlDoc = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String line = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in = new java.io.BufferedReader(new java.io.FileReader(file));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;//Read the entire file and store in it xmlDoc.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;xmlDoc = new StringBuffer();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (line != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;xmlDoc.append(line + newline);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//xmlDoc.append(line);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in.close();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new DesignError(e.getMessage());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String xml = new String(xmlDoc);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Now, the entire xml file is in the string: xml.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return xml;"/>
        </eAnnotations>
        <eParameters name="dirName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getBoundedContent" eType="#//base/Pair">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;int b1 = s.indexOf(beginPart1);&#xD;&#xA;&#x9;&#x9;if (b1 == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;int b2 = s.indexOf(beginPart2,b1);&#xD;&#xA;&#x9;&#x9;if (b2 == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;int e = s.indexOf(end,b2);&#xD;&#xA;&#x9;&#x9;if (e == -1)&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;String content = s.substring(b2 + 1,e).trim();&#xD;&#xA;&#x9;&#x9;int n = e + end.length();&#xD;&#xA;&#x9;&#x9;String newS = null;&#xD;&#xA;&#x9;&#x9;if (n &lt; s.length())&#xD;&#xA;&#x9;&#x9;&#x9;newS = s.substring(n);&#xD;&#xA;&#x9;&#x9;return new Pair(content,newS);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="beginPart1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="beginPart2" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="end" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getDataCells" eType="#//base/String1DT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;&#x9;&#x9;&#x9;java.util.ArrayList list = new java.util.ArrayList ();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String data = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String content = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;while (row != null &amp;&amp; row.length() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Pair p = getBoundedContent(row,&quot;&lt;Cell&quot;,&quot;>&quot;,&quot;&lt;/Cell>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (p == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;row = PairImpl.NEW_STRING_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p = getBoundedContent(data,&quot;&lt;Data&quot;,&quot;>&quot;,&quot;&lt;/Data>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (p == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;content = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(content);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(list.size() == 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[] x = new String [list.size()];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return (String[])list.toArray(x);"/>
        </eAnnotations>
        <eParameters name="row" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getWorksheets" eType="#//base/String3DT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;&#x9;java.util.ArrayList rowList = null;&#xD;&#xA;&#x9;&#x9;&#x9;java.util.ArrayList sheetList = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String sheet = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String row = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String[] data = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;sheetList = new java.util.ArrayList ();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String doc = new String (xml);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (doc.startsWith(&quot;@reference&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;refStatus = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return filter(doc);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Pair p = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;while (doc != null &amp;&amp; doc.length() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;p = getBoundedContent(doc,&quot;&lt;Worksheet&quot;,&quot;>&quot;,&quot;&lt;/Worksheet>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (p == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sheet = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;doc = PairImpl.NEW_STRING_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rowList = new java.util.ArrayList ();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (sheet != null &amp;&amp; sheet.length() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Pair p2 = getBoundedContent(sheet,&quot;&lt;Row&quot;,&quot;>&quot;,&quot;&lt;/Row>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (p2 == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;row = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sheet = PairImpl.NEW_STRING_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data = getDataCells(row);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (data != null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rowList.add(data);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sheetList.add(rowList);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if(p == null){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;doc = new String(xml);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (doc != null &amp;&amp; doc.length() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p = getBoundedContent(doc,&quot;&lt;ss:Worksheet&quot;,&quot;>&quot;,&quot;&lt;/ss:Worksheet>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(p == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sheet = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;doc = PairImpl.NEW_STRING_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rowList = new java.util.ArrayList ();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;while (sheet != null &amp;&amp; sheet.length() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Pair p2 = getBoundedContent(sheet,&quot;&lt;Row&quot;,&quot;>&quot;,&quot;&lt;/Row>&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (p2 == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;row = PairImpl.CONTENT_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sheet = PairImpl.NEW_STRING_EDEFAULT;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data = getDataCells(row);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (data != null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;rowList.add(data);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sheetList.add(rowList);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String[][][] result = new String [sheetList.size()][][];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for (int i = 0; i &lt; result.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;java.util.ArrayList x = (java.util.ArrayList)sheetList.get(i);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result[i] = new String [x.size()][];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int j = 0; j &lt; result[i].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;String[] y = (String[])x.get(j);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][j] = new String [y.length];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; y.length; ++k)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][j][k] = y[k];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return result;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isReference" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return refStatus;&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getReference" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return refPath;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="setXSD">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="xsdFile = xsd;"/>
        </eAnnotations>
        <eParameters name="xsd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="filter" eType="#//base/String3DT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;java.io.LineNumberReader text = new java.io.LineNumberReader(new java.io.StringReader(doc));&#xD;&#xA;&#x9;&#x9;String line = null;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;line = text.readLine();&#xD;&#xA;&#x9;&#x9;} catch (java.io.IOException err) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new DesignError(&quot;Cannot read file: &quot; + err.toString());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String[] tmp = line.split(&quot;[ |\t]+&quot;);&#xD;&#xA;&#x9;&#x9;if (!tmp[0].equals(&quot;@reference&quot;) || !tmp[1].equals(&quot;=&quot;) || !tmp[4].equals(&quot;=&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;throw new DesignError(&quot;Invalid syntax at line number &quot; + text.getLineNumber() + &quot; in file filter.&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String baseDirectory = tmp[2];&#xD;&#xA;&#x9;&#x9;String baseAssemblyName = tmp[3];&#xD;&#xA;&#x9;&#x9;String newAssemblyName = tmp[5];&#xD;&#xA;&#x9;&#x9;System.out.println(&quot;Applying filter in directory &quot; + baseDirectory + &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&quot; to assembly &quot; + baseAssemblyName + &quot;.  New assembly is &quot; + newAssemblyName + &quot;.&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// B. Get the contents of this base spreadsheet.&#xD;&#xA;&#x9;&#x9;String referenceXml = getSpreadsheet(baseDirectory, baseAssemblyName + &quot;_spreadsheet.xml&quot;);&#xD;&#xA;&#x9;&#x9;refPath = baseDirectory + &quot;/&quot; + baseAssemblyName + &quot;_spreadsheet.xml&quot;;&#xD;&#xA;&#x9;&#x9;SpreadsheetParser p = BaseFactoryImpl.eINSTANCE.createSpreadsheetParser(referenceXml);&#xD;&#xA;&#x9;&#x9;SpreadsheetValidator v = BaseFactoryImpl.eINSTANCE.createSpreadsheetValidator();&#xD;&#xA;&#x9;&#x9;if (!v.validate(refPath,xsdFile)) {&#xD;&#xA;&#x9;&#x9;&#x9;String s = &quot;Spreadsheet &quot; + baseAssemblyName + &quot;_spreadsheet.xml is not a valid spreadsheet.&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;throw new DesignError(s);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;System.out.println(&quot;Base spreadsheet &quot; + baseAssemblyName + &quot; has been validated.&quot;);&#xD;&#xA;&#x9;&#x9;String[][][] base = p.getWorksheets();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// C. Change the assembly name in the base spreadsheet.&#xD;&#xA;&#x9;&#x9;for (int i = 0; i &lt; base.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (base[i][j][0].equals(baseAssemblyName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;base[i][j][0] = newAssemblyName;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// D. Apply the filter to the base.&#xD;&#xA;&#x9;&#x9;//    Any deleted rows we will simply make null.&#xD;&#xA;&#x9;&#x9;String[][] worksheet = null;&#xD;&#xA;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;line = text.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;} catch (java.io.IOException err) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;Cannot read file: &quot; + err.toString());&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (line == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;if (line.trim().length() == 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;if (line.startsWith(&quot;Main&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = base[0];&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndMain&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Monitor&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = base[1];&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndMonitor&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Control&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = base[2];&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndControl&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;Archive&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = base[3];&#xD;&#xA;&#x9;&#x9;&#x9;else if (line.startsWith(&quot;EndArchive&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet = null;&#xD;&#xA;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;Invalid syntax at line number &quot; + text.getLineNumber() + &quot; in file filter. (Missing statement)&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;tmp = line.split(&quot;[ |\t]+&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (line.startsWith(&quot;~&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;deleteRow(worksheet,tmp[0].substring(1));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String s = line.substring(tmp[0].length());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;modifyRow(worksheet,text.getLineNumber(),tmp[0],s);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// E. Assign the non-null array.&#xD;&#xA;&#x9;&#x9;String[][][] result = new String [base.length] [] [];&#xD;&#xA;&#x9;&#x9;for (int i = 0; i &lt; result.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;int nrow = 0;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (base[i][j] != null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;++nrow;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;result[i] = new String [nrow] [];&#xD;&#xA;&#x9;&#x9;&#x9;int jj = 0;&#xD;&#xA;&#x9;&#x9;&#x9;for (int j = 0; j &lt; base[i].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (base[i][j] != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][jj] = new String [base[i][j].length];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; base[i][j].length; ++k)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;result[i][jj][k] = base[i][j][k];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;++jj;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// F. Return the new spreadsheet. &#xD;&#xA;&#x9;&#x9;return result;"/>
        </eAnnotations>
        <eParameters name="doc" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="deleteRow">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (worksheet[0][0].equals(&quot;Hardware Device&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;for (int i = 2; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][0].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet[i] = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;throw new DesignError(&quot;The name &quot; + name + &quot; is not the name of a row in the Main worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;for (int i = 2; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;if (worksheet[i][1].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;worksheet[i] = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;throw new DesignError(&quot;The name &quot; + name + &quot; is not the name of a row in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);"/>
        </eAnnotations>
        <eParameters name="worksheet" eType="#//base/String2DT"/>
        <eParameters name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="modifyRow">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="// Find the row.&#xD;&#xA;&#x9;&#x9;int row = 0;&#xD;&#xA;&#x9;&#x9;if (worksheet[0][0].equals(&quot;Hardware Device&quot;)) {&#xD;&#xA;&#x9;&#x9;&#x9;int i = 2;&#xD;&#xA;&#x9;&#x9;&#x9;for (; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][0].equals(rowName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;row = i;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (i == worksheet.length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;The name &quot; + rowName + &quot; is not the name of a row in the Main worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;int i = 2;&#xD;&#xA;&#x9;&#x9;&#x9;for (; i &lt; worksheet.length; ++i) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i] == null)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[i][1].equals(rowName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;row = i;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (i == worksheet.length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;The name &quot; + rowName + &quot; is not the name of a row in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;String name;&#xD;&#xA;&#x9;&#x9;String value;&#xD;&#xA;&#x9;&#x9;int b;&#xD;&#xA;&#x9;&#x9;int m;&#xD;&#xA;&#x9;&#x9;int e;        &#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;while(true) {&#xD;&#xA;&#x9;&#x9;&#x9;b = s.indexOf('&lt;');&#xD;&#xA;&#x9;&#x9;&#x9;m = s.indexOf('=');&#xD;&#xA;&#x9;&#x9;&#x9;e = s.indexOf('>');&#xD;&#xA;&#x9;&#x9;&#x9;if (b == -1 || m == -1 || e == -1 || m &lt; b || e &lt; m) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;Invalid syntax at line number &quot; + lineNumber + &quot; in file filter.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;name = s.substring(b + 1, m).trim();&#xD;&#xA;&#x9;&#x9;&#x9;value = s.substring(m + 1, e).trim();&#xD;&#xA;&#x9;&#x9;&#x9;// Apply the change.&#xD;&#xA;&#x9;&#x9;&#x9;int j = 0;&#xD;&#xA;&#x9;&#x9;&#x9;for (; j &lt; worksheet[row].length; ++j) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (worksheet[1][j].equals(name)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;worksheet[row][j] = value;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;if (j == worksheet[row].length)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;throw new DesignError(&quot;The name &quot; + name + &quot; is not the name of a column in the &quot; + worksheet[0][0] + &quot; worksheet.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;// Get the next change.&#xD;&#xA;&#x9;&#x9;&#x9;++e;&#xD;&#xA;&#x9;&#x9;&#x9;while (e &lt; s.length() &amp;&amp; (s.charAt(e) == ' ' || s.charAt(e) == '\t'))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;++e;&#xD;&#xA;&#x9;&#x9;&#x9;if (e == s.length())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;s = s.substring(e);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#x9;"/>
        </eAnnotations>
        <eParameters name="worksheet" eType="#//base/String2DT"/>
        <eParameters name="lineNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
        <eParameters name="rowName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="refPath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="refStatus" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="xml" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="xsdFile" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="newline" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
          defaultValueLiteral=""/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="setNewContent" eType="#//base/Pair"
          containment="true"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="tovalidateSpreads" eType="#//base/SpreadsheetValidator"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Util">
      <eOperations name="error">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="System.out.println(msg);&#xD;&#xA;System.exit(0);"/>
        </eAnnotations>
        <eParameters name="msg" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="RemoveLinesFromFile">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;&#x9;&#x9;java.io.PrintStream out = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.LineNumberReader in = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String line = null;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;java.io.File file = new java.io.File (dirName,fileName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!file.isFile())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error(file.getAbsolutePath() + &quot; is not a file.&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Open the input file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in = new java.io.LineNumberReader(new java.io.FileReader(file));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Create the output file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String newName = file.getAbsolutePath() + &quot;.tmp&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out = new java.io.PrintStream (new java.io.FileOutputStream (new java.io.File(newName)));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Skip all blank lines at the beginning.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line != null &amp;&amp; line.trim().length() == 0)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean blankFound = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while (line != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (line.trim().length() == 0) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;blankFound = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (blankFound) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;blankFound = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (replace == 1)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out.println();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;out.println(line);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;line = in.readLine();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Close the input file and the output file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;in.close();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;out.close();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// Delete the old file and rename the new file.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!file.delete())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error(&quot;Could not delete &quot; + file.getAbsolutePath());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;java.io.File newFile = new java.io.File (newName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;newFile.renameTo(file);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}catch (java.io.IOException err) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;error(err.toString());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}"/>
        </eAnnotations>
        <eParameters name="dirName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="fileName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="replace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </eOperations>
      <eOperations name="AltName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (str == null || str.length() == 0)&#xD;&#xA;            return null;&#xD;&#xA;        String s = str;&#xD;&#xA;        StringBuffer x = new StringBuffer ();&#xD;&#xA;        char c = s.charAt(0);&#xD;&#xA;        x.append(Character.toUpperCase(c));&#xD;&#xA;        for (int i = 1; i &lt; s.length(); ++i) {&#xD;&#xA;            c = s.charAt(i);&#xD;&#xA;            if (c == '_') {&#xD;&#xA;                do {&#xD;&#xA;                    ++i;&#xD;&#xA;                    if (i == s.length())&#xD;&#xA;                        break;&#xD;&#xA;                    c = s.charAt(i);&#xD;&#xA;                } while (c == '_');&#xD;&#xA;                if (i == s.length())&#xD;&#xA;                    break;&#xD;&#xA;                x.append(Character.toUpperCase(c));&#xD;&#xA;            } else {&#xD;&#xA;                x.append(Character.toLowerCase(c));&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return x.toString();"/>
        </eAnnotations>
        <eParameters name="str" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescriptionBase" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (s == null)&#xD;&#xA;            return &quot;&quot;;&#xD;&#xA;        String raw = decodeHTMLChars(s);&#xD;&#xA;        StringBuffer extract = new StringBuffer ();&#xD;&#xA;        int begin = 0;&#xD;&#xA;        int current = 0;&#xD;&#xA;        int len = raw.length();&#xD;&#xA;        char c = 0;&#xD;&#xA;        while (current &lt; len) {&#xD;&#xA;            c = raw.charAt(current);&#xD;&#xA;            if (c == '&amp;' &amp;&amp; (current + 4) &lt;= len &amp;&amp; raw.charAt(current + 1) == '#' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 2) == '1' &amp;&amp; raw.charAt(current + 3) == '0' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 4) == ';') {&#xD;&#xA;                c = ' ';&#xD;&#xA;                current += 4;&#xD;&#xA;            }&#xD;&#xA;            extract.append(c);&#xD;&#xA;            if ((current - begin) > maxLength &amp;&amp; c == ' ') {&#xD;&#xA;                extract.append(newline);&#xD;&#xA;                extract.append(prefix);&#xD;&#xA;                begin = current + 1;&#xD;&#xA;            }&#xD;&#xA;            ++current;&#xD;&#xA;        }&#xD;&#xA;        return extract.toString();"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="prefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescription" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return formatDescriptionBase(s,&quot;&quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescriptionL1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return formatDescriptionBase(s,&quot;/// &quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescriptionL2" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return formatDescriptionBase(s,&quot;    /// &quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescriptionL4" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return formatDescriptionBase(s,&quot;/// &quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="formatDescriptionL5" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return formatDescriptionBase(s,&quot;    /// &quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="descriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="if (s == null)&#xD;&#xA;            return &quot;&quot;;&#xD;&#xA;        String raw = decodeHTMLChars(s);&#xD;&#xA;        StringBuffer extract = new StringBuffer ();&#xD;&#xA;        int current = 0;&#xD;&#xA;        int len = raw.length();&#xD;&#xA;        char c = 0;&#xD;&#xA;        while (current &lt; len) {&#xD;&#xA;            c = raw.charAt(current);&#xD;&#xA;            if (c == '&amp;' &amp;&amp; (current + 4) &lt;= len &amp;&amp; raw.charAt(current + 1) == '#' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 2) == '1' &amp;&amp; raw.charAt(current + 3) == '0' &amp;&amp;&#xD;&#xA;                        raw.charAt(current + 4) == ';') {&#xD;&#xA;                c = ' ';&#xD;&#xA;                current += 4;&#xD;&#xA;            }&#xD;&#xA;            extract.append(c);&#xD;&#xA;            ++current;&#xD;&#xA;        }&#xD;&#xA;        return extract.toString();"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="decodeHTMLChars" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=" if (s == null || s.length() == 0)&#xD;&#xA;            return s;&#xD;&#xA;        StringBuffer x = new StringBuffer();&#xD;&#xA;        int index = 0;&#xD;&#xA;        int index1 = 0;&#xD;&#xA;        int index2 = 0;&#xD;&#xA;        int index3 = 0;&#xD;&#xA;        int index4 = 0;&#xD;&#xA;        int current = 0;&#xD;&#xA;        while (true) {&#xD;&#xA;            // look for any HTML encoded character&#xD;&#xA;            index1 = s.indexOf(&quot;&amp;lt;&quot;, current);&#xD;&#xA;            index2 = s.indexOf(&quot;&amp;gt;&quot;, current);&#xD;&#xA;            index3 = s.indexOf(&quot;&amp;amp;&quot;, current);&#xD;&#xA;            index4 = s.indexOf(&quot;&amp;#xd;&quot;, current);&#xD;&#xA;            // if there aren't any, we're done&#xD;&#xA;            if (index1 == -1 &amp;&amp; index2 == -1 &amp;&amp; index3 == -1 &amp;&amp; index4 == -1) {&#xD;&#xA;                x.append(s.substring(current));&#xD;&#xA;                break;&#xD;&#xA;            }&#xD;&#xA;            // set index to the least value that is not -1&#xD;&#xA;            index = index1;&#xD;&#xA;            if (index == -1 || (index2 != -1 &amp;&amp; index2 &lt; index))&#xD;&#xA;                index = index2;&#xD;&#xA;            if (index == -1 || (index3 != -1 &amp;&amp; index3 &lt; index))&#xD;&#xA;                index = index3;&#xD;&#xA;            if (index == -1 || (index4 != -1 &amp;&amp; index4 &lt; index))&#xD;&#xA;                index = index4;&#xD;&#xA;            // append the current text up to index&#xD;&#xA;            x.append(s.substring(current,index));&#xD;&#xA;            // append the correct character and skip over the HTML encoded characters&#xD;&#xA;            if (index == index1) {&#xD;&#xA;                x.append('&lt;');&#xD;&#xA;                current = index + 4;&#xD;&#xA;            } else if (index == index2) {&#xD;&#xA;                x.append('>');&#xD;&#xA;                current = index + 4;&#xD;&#xA;            } else if (index == index3) {&#xD;&#xA;                x.append('&amp;');&#xD;&#xA;                current = index + 5;&#xD;&#xA;            } else if (index == index4) {&#xD;&#xA;                x.append('\n');&#xD;&#xA;                current = index + 5;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;        return new String (x);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="isArray" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return s.endsWith(&quot;]&quot;) ? true : false;"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="NumberRawDataTypeBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return (String)TableImpl.RAW_BYTES_EDEFAULT.get(s);&#xD;&#xA;"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="RawDataTypeTotalBytes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;&#x9;if (isArray(s)) {&#xD;&#xA;&#x9;&#x9;&#x9;int b;&#xD;&#xA;&#x9;&#x9;&#x9;int n = Integer.parseInt(NumberOfItems(s));&#xD;&#xA;&#x9;&#x9;&#x9;if(s.startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;if(s.startsWith(&quot;[&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return &quot;0&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;int i = s.indexOf(&quot;[&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;b = Integer.parseInt((String)BaseFactory.eINSTANCE.createTable().getRawBytes().get(s.substring(0,1)));&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;String x = Integer.toString(n * b);&#xD;&#xA;&#x9;&#x9;&#x9;return x;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return (String)BaseFactory.eINSTANCE.createTable().getRawBytes().get(s);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="NumberOfItems" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="        if (s.startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;            return &quot;1&quot;;&#xD;&#xA;        if (!isArray(s))&#xD;&#xA;            return &quot;1&quot;;&#xD;&#xA;        int i = s.indexOf(&quot;[&quot;);&#xD;&#xA;        if (i == -1)&#xD;&#xA;            throw new DesignError(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;        String x = s.substring(i + 1, s.length() - 1);&#xD;&#xA;        try {&#xD;&#xA;            int n = Integer.parseInt(x);&#xD;&#xA;        } catch (NumberFormatException err) {&#xD;&#xA;            throw new DesignError(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;        }&#xD;&#xA;        return x;"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getRawDataTypeIndex" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=" // Temporary &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;Must fix this bug&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xD;&#xA;        //if (s.equals(&quot;~&quot;))&#xD;&#xA;            //return 5;&#xD;&#xA;        // End Temporary &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&#xD;&#xA;        if (s.startsWith(&quot;&amp;lt;&quot;))&#xD;&#xA;            return 0;&#xD;&#xA;        if (s.startsWith(&quot;[&quot;))&#xD;&#xA;            return 0; // This isn't really true, but it will pass the validation.&#xD;&#xA;        String x = s;&#xD;&#xA;        if (isArray(s)) {&#xD;&#xA;            int i = s.indexOf(&quot;[&quot;);&#xD;&#xA;            if (i == -1)&#xD;&#xA;                throw new DesignError(&quot;Invalid syntax in array notation: (&quot; + s + &quot;)&quot;);&#xD;&#xA;            x = s.substring(0, i);&#xD;&#xA;        }&#xD;&#xA;        //int i = 0;&#xD;&#xA;        //for (; i &lt; Table.RawDataType.length; ++i) {&#xD;&#xA;        //    if (Table.RawDataType[i].equals(x))&#xD;&#xA;        //        break;&#xD;&#xA;        //}&#xD;&#xA;        //if (i &lt; Table.RawDataType.length)&#xD;&#xA;        //    return i;&#xD;&#xA;&#x9;&#x9;&#x9;return 0;&#xD;&#xA;        //throw new DesignError(&quot;Unknown RawDatatype: (&quot; + s + &quot;)&quot;);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="toArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;    &#x9;//The required string date form is &quot;YYYY-MM-DDThh:mm:ss.ssss&quot;.&#xD;&#xA;&#x9;&#x9;    &#x9;alma.hla.runtime.asdm.types.ArrayTime t = new alma.hla.runtime.asdm.types.ArrayTime (&quot;20&quot; + parseDateString(s,true) + &quot;T00:00:00.0&quot;);&#xD;&#xA;&#x9;&#x9;    &#x9;long l = t.get();&#xD;&#xA;&#x9;&#x9;    &#x9;return Long.toString(l);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="parseDateString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;int pos = 0;&#xD;&#xA;&#x9;&#x9;int n = s.indexOf('-'); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String yy = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;if (yy.startsWith(&quot;20&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;yy = yy.substring(2);&#xD;&#xA;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;n = s.indexOf('-',pos); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String mm = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;int nmm = 0;&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;nmm = Integer.parseInt(mm);&#xD;&#xA;&#x9;&#x9;} catch (NumberFormatException err) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if (nmm &lt; 1 || nmm > 12) return null;&#xD;&#xA;&#x9;&#x9;pos = n + 1;&#xD;&#xA;&#x9;&#x9;n = s.indexOf('T',pos); &#x9;if (n == -1) return null;&#xD;&#xA;&#x9;&#x9;String dd = s.substring(pos,n);&#xD;&#xA;&#x9;&#x9;return yy + '-' + (alt ? montHalt[nmm - 1] : month[nmm - 1]) + '-' + dd;"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="alt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      </eOperations>
      <eOperations name="normalizeNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value=" if (wdt.equals(&quot;boolean&quot;))&#xD;&#xA;&#x9;&#x9;   return normalizeBoolean(value);&#xD;&#xA;&#x9;   else if (wdt.equals(&quot;double&quot;) || wdt.equals(&quot;float&quot;))&#xD;&#xA;&#x9;&#x9;   return normalizeFloat(value);&#xD;&#xA;&#x9;   else&#xD;&#xA;&#x9;&#x9;   return value;"/>
        </eAnnotations>
        <eParameters name="wdt" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="normalizeFloat" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;   try {&#xD;&#xA;          // Does value contain a valid &quot;double&quot; or &quot;float&quot;?&#xD;&#xA;&#x9;&#x9;  Double.parseDouble(value);&#xD;&#xA;          // Does value contain a decimal point?&#xD;&#xA;          if (-1 == value.indexOf('.')) {&#xD;&#xA;        &#x9;  // No decimal point found.&#xD;&#xA;&#x9;&#x9;      // Does value contain an exponent?&#xD;&#xA;&#x9;&#x9;      int i = value.indexOf('E');&#xD;&#xA;&#x9;&#x9;      if (-1 != i) {&#xD;&#xA;&#x9;&#x9;&#x9;      // Insert the &quot;.0&quot; before the &quot;E&quot;.&#xD;&#xA;&#x9;&#x9;&#x9;      String parts[] = value.split(&quot;E&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;      return parts[0] + &quot;.0E&quot; + parts[1];&#xD;&#xA;&#x9;&#x9;       } else {&#xD;&#xA;&#x9;&#x9;    &#x9;   // No exponent found.&#xD;&#xA;&#x9;&#x9;&#x9;       // Append the &quot;.0&quot; to the end.&#xD;&#xA;                   return value + &quot;.0&quot;;&#xD;&#xA;&#x9;&#x9;       }&#xD;&#xA;&#x9;       } else {&#xD;&#xA;&#x9;    &#x9;   // value contains a decimal point.  Return it without changes.  &#xD;&#xA;&#x9;           return value;&#xD;&#xA;&#x9;       }&#xD;&#xA;       } catch (NumberFormatException de) {&#xD;&#xA;           try {&#xD;&#xA;               // Does this contain a valid &quot;integer&quot; or &quot;long&quot;?&#xD;&#xA;        &#x9;   Integer.parseInt(value);&#xD;&#xA;        &#x9;   // Add the missing decimal point and trailing &quot;0&quot;.&#xD;&#xA;        &#x9;   return value + &quot;.0&quot;;&#xD;&#xA;       &#x9;   } catch (NumberFormatException ie) {&#xD;&#xA;       &#x9;&#x9;   // This is not a number.&#xD;&#xA;       &#x9;&#x9;   // Return it as is.&#xD;&#xA;       &#x9;&#x9;   return value;&#xD;&#xA;       &#x9;   }&#xD;&#xA;       }"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="normalizeBoolean" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;   int indexOfDot = value.indexOf('.');&#xD;&#xA;&#x9;   if (-1 == indexOfDot) {&#xD;&#xA;&#x9;&#x9;   return value;&#xD;&#xA;&#x9;   } else {&#xD;&#xA;&#x9;&#x9;   return value.substring(0,indexOfDot);&#xD;&#xA;&#x9;   }"/>
        </eAnnotations>
        <eParameters name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getInstallDir" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;String dirLocation = null;&#xD;&#xA;&#x9;&#x9;String acsroot = System.getenv(&quot;ACSROOT&quot;);&#xD;&#xA;&#x9;&#x9;String intlist = System.getenv(&quot;INTLIST&quot;);&#xD;&#xA;&#x9;&#x9;String introot = System.getenv(&quot;INTROOT&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (acsroot != null &amp;&amp; new java.io.File(acsroot + &quot;/lib/ControlGenHwDevice&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;dirLocation = acsroot + &quot;/lib/ControlGenHwDevice&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (intlist != null ) {&#xD;&#xA;&#x9;&#x9;&#x9;String dirs[] = intlist.split(&quot;:&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;for (int i = 0; i &lt; dirs.length; i++) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (new java.io.File(dirs[i] + &quot;/lib/ControlGenHwDevice&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dirLocation = dirs[i] + &quot;/lib/ControlGenHwDevice&quot;;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (introot != null &amp;&amp; new java.io.File(introot + &quot;/lib/ControlGenHwDevice&quot;).exists()) {&#xD;&#xA;&#x9;&#x9;&#x9;dirLocation = introot + &quot;/lib/ControlGenHwDevice&quot;;&#xD;&#xA;&#x9;&#x9;}  &#xD;&#xA;&#xD;&#xA;&#x9;&#x9;assert dirLocation != null : &quot;dirLocation is null, this means that I cannot find lib/ControlGenHwDevice&quot;;&#xD;&#xA;&#x9;&#x9;return dirLocation;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="toDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return parseDateString(s,false);"/>
        </eAnnotations>
        <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="newline" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="maxLength" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
          defaultValueLiteral="54"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="MONTH" eType="#//base/String1DT"
          defaultValueLiteral="&quot;JAN&quot;, &quot;FEB&quot;, &quot;MAR&quot;, &quot;APR&quot;, &quot;MAY&quot;, &quot;JUN&quot;, &quot;JUL&quot;, &quot;AUG&quot;, &quot;SEP&quot;, &quot;OCT&quot;, &quot;NOV&quot;, &quot;DEC&quot;"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="MONTHalt" eType="#//base/String1DT"
          defaultValueLiteral="&quot;01&quot;, &quot;02&quot;, &quot;03&quot;, &quot;04&quot;, &quot;05&quot;, &quot;06&quot;, &quot;07&quot;, &quot;08&quot;, &quot;09&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getRawBytes" eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Pair" abstract="true" eSuperTypes="#//base/SpreadsheetParser">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="newString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="SimpleErrorHandler">
      <eOperations name="error" eType="#//base/SAXParseExceptionDT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="System.out.println(&quot;error: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
        </eAnnotations>
        <eParameters name="exception" eType="#//base/SAXParseExceptionDT"/>
      </eOperations>
      <eOperations name="fatalError" eType="#//base/SAXParseExceptionDT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="System.out.println(&quot;fatalError: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
        </eAnnotations>
        <eParameters name="exception" eType="#//base/SAXParseExceptionDT"/>
      </eOperations>
      <eOperations name="warning" eType="#//base/SAXParseExceptionDT">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="System.out.println(&quot;warning: line &quot;+ exception.getLineNumber() + &quot;: &quot; + exception.getMessage());&#xD;&#xA;errors = true;"/>
        </eAnnotations>
        <eParameters name="exception" eType="#//base/SAXParseExceptionDT"/>
      </eOperations>
      <eOperations name="areErrors" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return errors;"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="errors" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="false"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="MainBase">
      <eOperations name="Assembly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Assembly&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Description&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DescriptionAsString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().descriptionAsString(Description());&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="DeviceName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Device Name&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="Extends" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;Extends&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICD" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;ICD&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return row[BaseFactoryImpl.eINSTANCE.createTable().getColNum(sheet, &quot;ICD Date&quot;)];&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDateAsDatabaseDate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().toDatabaseDate(ICDDate());&#xD;&#xA;"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="ICDDateAsArrayTime" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return BaseFactoryImpl.eINSTANCE.createUtil().toArrayTime(ICDDate());"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="row" eType="#//base/String1DT"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sheet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="implementTo" eType="#//base/DeviceModel"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="convertInfoTo" eType="#//base/Util"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="getInfoFromSpread" eType="#//base/Table"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="SimpleErrorHandlerDT" instanceClassName="datamodel.base.SimpleErrorHandler"/>
    <eClassifiers xsi:type="ecore:EDataType" name="MandCBaseDT" instanceClassName="datamodel.base.MandCBase"
        serializable="false"/>
    <eClassifiers xsi:type="ecore:EDataType" name="MainBaseDT" instanceClassName="datamodel.base.MainBase"
        serializable="false"/>
    <eClassifiers xsi:type="ecore:EDataType" name="ArrayList" instanceClassName="java.util.ArrayList"/>
    <eClassifiers xsi:type="ecore:EDataType" name="Hashtable" instanceClassName="java.util.Hashtable"/>
    <eClassifiers xsi:type="ecore:EDataType" name="SAXParseExceptionDT" instanceClassName="org.xml.sax.SAXParseException"/>
    <eClassifiers xsi:type="ecore:EDataType" name="String3DT" instanceClassName="java.lang.String[][][]"/>
    <eClassifiers xsi:type="ecore:EDataType" name="String2DT" instanceClassName="java.lang.String[][]"/>
    <eClassifiers xsi:type="ecore:EDataType" name="String1DT" instanceClassName="java.lang.String[]"/>
    <eClassifiers xsi:type="ecore:EDataType" name="SystemDT" instanceClassName="java.lang.System"/>
  </eSubpackages>
  <eSubpackages name="eth" nsURI="http://alma.Control.datamodel.eth/1.0" nsPrefix="alma.Control.datamodel.meta.eth">
    <eClassifiers xsi:type="ecore:EClass" name="ArchiveETH" eSuperTypes="#//base/ArchiveProperty"/>
    <eClassifiers xsi:type="ecore:EClass" name="ControlETH" eSuperTypes="#//base/ControlPoint"/>
    <eClassifiers xsi:type="ecore:EClass" name="DeviceModel" eSuperTypes="#//base/DeviceModel"/>
    <eClassifiers xsi:type="ecore:EClass" name="MainETH" eSuperTypes="#//base/MainBase"/>
    <eClassifiers xsi:type="ecore:EClass" name="MandCETH"/>
    <eClassifiers xsi:type="ecore:EClass" name="MonitorETH" eSuperTypes="#//base/MonitorPoint"/>
  </eSubpackages>
</ecore:EPackage>
