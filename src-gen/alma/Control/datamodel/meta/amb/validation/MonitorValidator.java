/**
 *
 * $Id$
 */
package alma.Control.datamodel.meta.amb.validation;

import alma.Control.datamodel.meta.amb.MandC;

import alma.Control.datamodel.meta.base.Table;
import alma.Control.datamodel.meta.base.Util;

import alma.Control.datamodel.meta.base.impl.BaseFactoryImpl;

import java.util.Iterator;

import org.eclipse.emf.ecore.resource.Resource;

/**
 * A sample validator interface for {@link alma.Control.datamodel.meta.amb.Monitor}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface MonitorValidator {
	boolean validate();

	boolean validateAux7(BaseFactoryImpl value);
	boolean validateMac(MandC value);
	boolean validateAux2(Iterator value);
	boolean validateAux3(Resource value);
	boolean validateToNormalizeData(Util value);
	boolean validateToColumnsCanBeInv(Table value);

	boolean validateToInfoMPSheet(MandC value);

	boolean validateGetColumnsCanBeInv(Table value);
	boolean validateGetInfoMPSheet(MandC value);
}
