/**
 *
 * $Id$
 */
package alma.Control.datamodel.meta.amb.validation;

import alma.Control.datamodel.meta.amb.Control;
import alma.Control.datamodel.meta.amb.Monitor;

import alma.Control.datamodel.meta.base.Table;
import alma.Control.datamodel.meta.base.Util;

import alma.Control.datamodel.meta.base.impl.BaseFactoryImpl;

import org.eclipse.emf.ecore.resource.ResourceSet;

/**
 * A sample validator interface for {@link alma.Control.datamodel.meta.amb.SWModule}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SWModuleValidator {
	boolean validate();

	boolean validateAssemblyName(String value);
	boolean validateDirPath(String value);
	boolean validateMainAssembly(String value);
	boolean validateOneSwModule(boolean value);
	boolean validateRow(String[] value);
	boolean validateParentRow(String[] value);
	boolean validateSheet(int value);
	boolean validateMonitorPoints(ResourceSet value);
	boolean validateControlPoints(ResourceSet value);
	boolean validateArchiveProperties(ResourceSet value);
	boolean validateSimMonitorPoints(ResourceSet value);
	boolean validateSimControlPoints(ResourceSet value);
	boolean validateAux5(BaseFactoryImpl value);
	boolean validateToAddAllMP(Monitor value);

	boolean validateToAddAllCP(Control value);

	boolean validateToFormatDescriptions(Util value);

	boolean validateToSheetColumns(Table value);

	boolean validateAddAllMP(Monitor value);
	boolean validateAddAllCP(Control value);
	boolean validateSetFormatDescriptions(Util value);
	boolean validateGetSheetColumns(Table value);
}
