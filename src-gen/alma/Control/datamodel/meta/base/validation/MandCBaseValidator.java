/**
 *
 * $Id$
 */
package alma.Control.datamodel.meta.base.validation;

import alma.Control.datamodel.meta.base.ArchiveProperty;
import alma.Control.datamodel.meta.base.MonitorPoint;
import alma.Control.datamodel.meta.base.Table;
import alma.Control.datamodel.meta.base.Util;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;

/**
 * A sample validator interface for {@link alma.Control.datamodel.meta.base.MandCBase}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface MandCBaseValidator {
	boolean validate();

	boolean validateSpreadsheetName(String value);
	boolean validateSheetName(String value);
	boolean validateRow(String[] value);
	boolean validateParentRow(String[] value);
	boolean validateSheet(int value);
	boolean validateParent(Resource value);
	boolean validateArchive(Resource value);
	boolean validateDependents(ResourceSet value);
	boolean validateSetInfFromSpread(Util value);
	boolean validateToCommonInf(Table value);

	boolean validateToMPorCP(ArchiveProperty value);

	boolean validateToSheetMP(MonitorPoint value);

	boolean validateGetCommonInf(Table value);
	boolean validateSetMPorCP(ArchiveProperty value);
	boolean validateGetSheetMP(MonitorPoint value);
}
